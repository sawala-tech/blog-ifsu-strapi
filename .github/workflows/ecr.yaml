name: Build & Push ECR Pipeline

on:
  push:
    branches:
      - "v*.x"
    tags:
      - "v*"

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-ecr:
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.meta.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.SAWALA_AWS_ROLE_ECR }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Create ECR repository if doesn't exist
        run: aws ecr-public describe-repositories --repository-names ${{ github.event.repository.name }} || aws ecr-public create-repository --repository-name ${{ github.event.repository.name }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/f5z4i4i9/${{ github.event.repository.name }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest
      - name: Build and push images to Amazon ECR
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/f5z4i4i9/${{ github.event.repository.name }}:latest
          cache-to: type=inline

  update-helm-chart:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-ecr
    if: ${{ needs.build-and-push-ecr.outputs.TAG != 'latest' }}
    env:
      IMAGE_TAG: ${{ needs.build-and-push-ecr.outputs.TAG || 'latest' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup yg
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 
          sudo chmod +x /usr/local/bin/yq
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.SAWALA_AWS_ROLE_ECR }}
          aws-region: ${{ secrets.SAWALA_AWS_REGION_ECR }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Update helm chart name
        run: |
          yq -i '.name = "${{ github.event.repository.name }}"' charts/strapi/Chart.yaml
      - name: Update helm chart image.repository
        run: |
          yq -i '.image.repository = "${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}"' charts/strapi/values.yaml
      - name: Update helm chart appVersion & image.tag to ${{ env.IMAGE_TAG }}
        run: |
          yq -i '.appVersion = "${{ env.IMAGE_TAG }}"' charts/strapi/Chart.yaml
          yq -i '.image.tag = "${{ env.IMAGE_TAG }}"' charts/strapi/values.yaml
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.SAWALA_TOKEN }}
          commit-message: "chore(helm): update appVersion and image.tag to ${{ env.IMAGE_TAG }} [skip ci]"
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          branch: k8s/helm-auto-update
          base: main
          delete-branch: true
          title: "chore(helm): update appVersion and image.tag to ${{ env.IMAGE_TAG }} [skip ci]"
          body: |
            chore(helm): update appVersion and image.tag to ${{ env.IMAGE_TAG }}
            - Auto-generated by [create-pull-request][1]
            [1]: https://github.com/peter-evans/create-pull-request
          assignees: andrijunaedi
          draft: false

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ secrets.SAWALA_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash

      - name: Auto approve Pull Request
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: juliangruber/approve-pull-request-action@v1
        with:
          github-token: ${{ secrets.SAWALA_GH_TOKEN_REVIEW }}
          number: ${{ steps.cpr.outputs.pull-request-number }}
